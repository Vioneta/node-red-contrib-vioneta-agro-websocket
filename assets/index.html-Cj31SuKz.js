import{_ as r,r as l,o as d,c as u,a as e,b as o,w as a,d as t,e as s}from"./app-DncVqQOV.js";const c={},h=s('<h1 id="jsonata" tabindex="-1"><a class="header-anchor" href="#jsonata" aria-hidden="true">#</a> JSONata</h1><p>JSONata is a <em>functional declarative</em> language, designed to work with JSON objects. It is built-in within Node-RED and is available in standard nodes where you see the <strong>J: expression</strong> option, for example in the <em>Inject Node</em>.</p><ul><li>JSONata code is written as a <em>line expression</em>, which is evaluated and returns the result.</li><li>The expression is evaluated against a JSON object. In Node-RED this JSON is the top level message object. There is no need to use a leading &#39;msg.&#39; therefore just <code>payload</code> will evaluate as the message payload <em>value</em>, and <code>topic</code> as the topic <em>value</em>.</li></ul><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>JSONata is very different to Mustache templates, and the use of <code>{{msg.payload}}</code> will not work as you might expect.</p></div><p>In the <strong>Vioneta Agro nodes</strong>, JSONata can be used to set entity states, set output property values, generate UI parameters, or as conditional tests (both generating the test value, and as an evaluated predicate expression).</p><h2 id="examples-of-using-jsonata-in-the-vioneta-agro-nodes" tabindex="-1"><a class="header-anchor" href="#examples-of-using-jsonata-in-the-vioneta-agro-nodes" aria-hidden="true">#</a> Examples of using JSONata in the Vioneta Agro Nodes:</h2>',6),p=e("ul",null,[e("li",null,"Increase light brightness with remote"),e("li",null,"Set A/C target temperature and hvac mode"),e("li",null,"Send 'lights on' notification when leaving home"),e("li",null,"Extract weather forecast details from call return")],-1),f=e("ul",null,[e("li",null,"Report difference between A/C current and target temperatures"),e("li",null,"Report if A/C been cooling for more than 2 hours before 17:00"),e("li",null,"Report if A/C unit is running outside of 'office hours'")],-1),m=e("ul",null,[e("li",null,"Motion detection start, and motion ending only before 08:30 and after 17:30"),e("li",null,"Switch just turned off, and has been on for less than three minutes"),e("li",null,"Motion detection only before dawn and after dusk, with dusk and dawn times output")],-1),g=e("ul",null,[e("li",null,"Every minute before and after sunset"),e("li",null,"Automation events just before, at, and just after sunset"),e("li",null,"Adjust light brightness from 0 to 100 percent over sunset")],-1),_=e("ul",null,[e("li",null,"Provide a sensor with a count of the number of lights that are on"),e("li",null,"Provide an attribute array (list) of the lights that are on"),e("li",null,"Since I last looked, list which lights have been turned on, or off")],-1),v=e("ul",null,[e("li",null,"Select flow routing depending on state 'last changed ms' period in minutes")],-1),b=e("ul",null,[e("li",null,"Calculate when, and for how long, I have not been at home in the past week")],-1),k=e("ul",null,[e("li",null,"Reading node entity states and attributes"),e("li",null,"Reading all Vioneta Agro entities"),e("li",null,"Reading Areas, Devices, and their Entities")],-1),w=s('<h2 id="vioneta-agro-functions" tabindex="-1"><a class="header-anchor" href="#vioneta-agro-functions" aria-hidden="true">#</a> Vioneta Agro functions</h2><p>There are several <em>additional</em> Vioneta Agro functions added for use in JSONata expressions, and these can only be used within the Vioneta Agro nodes.</p><ul><li><p><code>$entity()</code> returns the entity that triggered the node</p></li><li><p><code>$prevEntity()</code> returns the previous state entity if the node is an event node</p></li><li><p><code>$areaDevices(areaId)</code> returns all devices associated with a specific area ID.</p></li><li><p><code>$areaEntities(areaId)</code> returns all entities associated with a specific area ID.</p></li><li><p><code>$areas(lookup)</code> returns an area based on a provided lookup value, or all areas if no lookup value is provided. The lookup value can be an area ID, an entity ID, or a device ID.</p></li><li><p><code>$deviceEntities(device_id)</code> returns all entities associated with a specific device.</p></li><li><p><code>$device(lookup)</code> returns a device based on a provided lookup value. The lookup value can be an entity ID or a device name.</p></li><li><p><code>$entities()</code> returns all entities in the cache</p></li><li><p><code>$entities(entity_id)</code> returns a single entity from cache matching the given entity_id</p></li></ul>',3),y={id:"exposed-lodash-functions",tabindex:"-1"},x=e("a",{class:"header-anchor",href:"#exposed-lodash-functions","aria-hidden":"true"},"#",-1),j={href:"https://lodash.com/",target:"_blank",rel:"noopener noreferrer"},N=e("code",null,"$sampleSize(collection, [n=1])",-1),S={href:"https://lodash.com/docs/#sampleSize",target:"_blank",rel:"noopener noreferrer"},I=e("p",null,"Gets n random elements at unique keys from collection up to the size of collection.",-1),A=e("code",null,"$randomNumber([lower=0], [upper=1], [floating])",-1),J={href:"https://lodash.com/docs/#random",target:"_blank",rel:"noopener noreferrer"},R=e("p",null,"Produces a random number between the inclusive lower and upper bounds. If only one argument is provided a number between 0 and the given number is returned. If floating is true, or either lower or upper are floats, a floating-point number is returned instead of an integer.",-1),E=e("p",null,[e("strong",null,"Also see:")],-1),O={href:"https://docs.jsonata.org",target:"_blank",rel:"noopener noreferrer"},$={href:"http://try.jsonata.org",target:"_blank",rel:"noopener noreferrer"};function D(V,C){const n=l("RouterLink"),i=l("ExternalLinkIcon");return d(),u("div",null,[h,e("ol",null,[e("li",null,[o(n,{to:"/cookbook/jsonata/call-service.html"},{default:a(()=>[t("Call a service using JSONata to build the data object")]),_:1}),p]),e("li",null,[o(n,{to:"/cookbook/jsonata/current-state.html"},{default:a(()=>[t("Read the current state or attribute value of an entity")]),_:1}),f]),e("li",null,[o(n,{to:"/cookbook/jsonata/events-state.html"},{default:a(()=>[t("Listen for entity state or attribute changes")]),_:1}),m]),e("li",null,[o(n,{to:"/cookbook/jsonata/trigger-state.html"},{default:a(()=>[t("Trigger a flow from state change conditions")]),_:1}),g]),e("li",null,[o(n,{to:"/cookbook/jsonata/sensor.html"},{default:a(()=>[t("Write state and attribute values to an HA sensor")]),_:1}),_]),e("li",null,[o(n,{to:"/cookbook/jsonata/switch-node.html"},{default:a(()=>[t("Route flow (switch node) based on computed outcomes")]),_:1}),v]),e("li",null,[o(n,{to:"/cookbook/jsonata/change-node.html"},{default:a(()=>[t("Read state history and process the return JSON (change node)")]),_:1}),b]),e("li",null,[o(n,{to:"/cookbook/jsonata/functions.html"},{default:a(()=>[t("Using the additional $entity() functions in JSONata")]),_:1}),k])]),w,e("h2",y,[x,t(" Exposed "),e("a",j,[t("Lodash"),o(i)]),t(" functions")]),e("ul",null,[e("li",null,[e("p",null,[N,t(),e("a",S,[t("https://lodash.com/docs/#sampleSize"),o(i)])]),I]),e("li",null,[e("p",null,[A,t(),e("a",J,[t("https://lodash.com/docs/#random"),o(i)])]),R])]),E,e("ul",null,[e("li",null,[e("a",O,[t("https://docs.jsonata.org"),o(i)])]),e("li",null,[e("a",$,[t("http://try.jsonata.org"),o(i)])])])])}const L=r(c,[["render",D],["__file","index.html.vue"]]);export{L as default};
